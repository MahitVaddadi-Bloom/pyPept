[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyPept"
version = "1.0.0"
description = "A Python library for peptide analysis and manipulation"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "pyPept Contributors" }
]
keywords = ["peptide", "chemistry", "bioinformatics", "rdkit", "molecular"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "rdkit>=2023.3.1",
    "numpy>=1.22.2,<3.0.0",  # Compatible with both NumPy 1.x and 2.x
    "scipy>=1.9.0",
    "pandas>=1.4.1",
    "requests>=2.27.1",
    "igraph>=0.9.10",
    "biopython>=1.79",
    "packaging>=21.0",  # For version checking
]

[project.optional-dependencies]
dev = [
    "bumpver>=2023.1126",
    "sphinx>=5.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
run_pyPept = "pyPept.interfaces.run_pyPept:main"

[project.urls]
Homepage = "https://github.com/yourusername/pyPept"
Documentation = "https://pypept.readthedocs.io"
Repository = "https://github.com/yourusername/pyPept"
"Bug Tracker" = "https://github.com/yourusername/pyPept/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/pyPept"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/examples",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "src/pyPept/__init__.py"

[tool.bumpver]
current_version = "1.0.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = ['version = "{version}"', 'current_version = "{version}"']
"src/pyPept/__init__.py" = ['__version__ = "{version}"']

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # defaults
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "E266", "E501", "W503"]
max-complexity = 18
select = ["B", "C", "E", "F", "W", "T4", "B9"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["*_Test.py", "test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=pyPept --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src/pyPept"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]


